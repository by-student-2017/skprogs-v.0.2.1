------------------------------------------------------------------------------
skprogs (Edit: 31/Oct/2023)
(https://github.com/dftbplus/skprogs)

Linux case: /mnt/d -> ${HOME}

libXC (ver.6.2.2)
1. cd /mnt/d
2. git clone https://gitlab.com/libxc/libxc.git libxc
3. cd libxc
4. git checkout 6.2.2
5. mkdir _build
6. FC=gfortran CC=gcc cmake -DENABLE_FORTRAN=True -DCMAKE_INSTALL_PREFIX="/mnt/d/libxc" -B _build ./
7. cmake --build _build -- -j
8. pushd _build
9. ctest -j
10. popd
11. cmake --install _build
(you can get "/mnt/d/libxc/lib/libxc.a")

Environment settings (this is not necessary.)
1. echo 'export PATH=$PATH:/mnt/d/libxc/lib' >> ~/.bashrc
2. echo 'export PATH=$PATH:/mnt/d/libxc/include' >> ~/.bashrc
3. echo 'export PATH=$PATH:/mnt/d/libxc/lib/pkgconfig' >> ~/.bashrc
4. bash

Results of ctest (libxc) (about 0.5 h)
----------
99% tests passed, 2 tests failed out of 19986

Total Test time (real) = 1760.41 sec

The following tests FAILED:
        2185 - Libxc-gga_x_2d_pbe-BrOH-unpol-1-run (Timeout)
        2186 - Libxc-gga_x_2d_pbe-BrOH-unpol-1-check (Failed)
Errors while running CTest
Output from these tests are in: /mnt/d/libxc/_build/Testing/Temporary/LastTest.log
Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.
----------

Installation (maybe, similar to skprogs-0.2.tar.gz)
0. sudo apt update
  sudo apt -y install gfortran g++ build-essential
  sudo apt -y install libopenmpi-dev libscalapack-openmpi-dev
  sudo apt -y install libopenblas-dev
  sudo apt -y install make cmake
  sudo apt -y install python3-numpy python3-setuptools
1. cd /mnt/d
2. git clone https://github.com/dftbplus/skprogs.git
3. cd skprogs
4. mkdir _build
5. CMAKE_PREFIX_PATH="/mnt/d/libxc" FC=gfortran cmake -DCMAKE_INSTALL_PREFIX="/mnt/d/skprogs-v.0.2.1" -B _build ./
6. cmake --build _build -- -j
7. pushd _build
8. ctest -j
9. popd
10. cmake --install _build

Environment settings
1. echo 'export PATH=$PATH:/mnt/d/skprogs-v.0.2.1/bin' >> ~/.bashrc
2. echo 'source /mnt/d/skprogs-v.0.2.1/bin/skprogs-activate.sh' >> ~/.bashrc
3. bash

Results of ctest (skprogs) (about 12 min)
----------
100% tests passed, 0 tests failed out of 8

Total Test time (real) = 745.16 sec
----------

Installation (skgen)
0. sudo apt -y install python3-setuptools
1. cd /mnt/d/skprogs-v.0.2.1/sktools
2. sudo python3 setup.py install

Generating SK-files (C, H, O)
(dummy repulsive: spline)
1. cd /mnt/d/skprogs-v.0.2.1/examples/mio
2. python3 /mnt/d/skprogs-v.0.2.1/sktools/src/sktools/scripts/skgen.py -o slateratom -t sktwocnt sktable -d C,H,O C,H,O

Generating SK-files (Ti, O)
(dummy repulsive: spline)
1. cd /mnt/d/skprogs-v.0.2.1/examples/mio
2. python3 /mnt/d/skprogs-v.0.2.1/sktools/src/sktools/scripts/skgen.py -o slateratom -t sktwocnt sktable -d Ti,O Ti,O

Generating SK-files (Au, S)
(dummy repulsive: spline)
1. cd /mnt/d/skprogs-v.0.2.1/examples/mio
2. python3 /mnt/d/skprogs-v.0.2.1/sktools/src/sktools/scripts/skgen.py -o slateratom -t sktwocnt sktable -d Au,S Au,S

Help
1. python3 /mnt/d/skprogs-v.0.2.1/sktools/src/sktools/scripts/skgen.py -h
2. python3 /mnt/d/skprogs-v.0.2.1/sktools/src/sktools/scripts/skgen.py sktable -h
(Note: -d = --dummy-repulsive = add dummy repulsive spline to the sk tables)

python3 version
1. python3 -V
  Python 3.10.12
  
Usage
1. cd /mnt/d/skprogs-v.0.2.1/examples/mio
2. vim skdef.hsd
3. /mnt/d/skprogs-v.0.2.1/sktools/src/sktools/scripts/skgen.py -o slateratom -t sktwocnt sktable -d Fe Fe
4. less Fe-Fe.skf
(see https://dftb.org/fileadmin/DFTB/public/misc/slakoformat.pdf
  Line 2: Ed Ep Es SPE Ud Up Us fd fp fs)

check band
1. cd /mnt/d/skprogs-v.0.2.1/examples/band_check/BCC_Fe
2. chmod +x *.sh
3. ./run.sh
4. (open) comp_band.png

check band
0. sudo apt -y install python3-numpy
1. cd /mnt/d/skprogs-v.0.2.1/examples/band_check/BCC_Fe
2. chmod +x *.sh
3. ./run.sh
4. (open) comp_band.png
------------------------------------------------------------------------------
Installation (Ubuntu 22.04.1 LTS on windows11 (WSL2))

DFTB+ (version 23.1)
(gfortran+ Netlib + OpenMPI) (wget command case) 
(http://www.dftbplus.org/about-dftb/)
ãƒ»DFTB+ Stable (stable version 23.1)
0. sudo apt update
  sudo apt -y install gfortran g++ build-essential
  sudo apt -y install libopenmpi-dev libscalapack-openmpi-dev
  sudo apt -y install libopenblas-dev
  sudo apt -y install make cmake
  sudo apt -y install python3-numpy python3-setuptools
1. cd /mnt/d
2. wget https://github.com/dftbplus/dftbplus/releases/download/23.1/dftbplus-23.1.tar.xz
3. tar xvf dftbplus-23.1.tar.xz
4. cd dftbplus-23.1
5. ./utils/get_opt_externals ALL
6. vim config.cmake
----------(before)
option(WITH_OMP "Whether OpenMP thread parallisation should be enabled" TRUE)
option(WITH_MPI "Whether DFTB+ should support MPI-parallelism" FALSE)
option(WITH_TRANSPORT "Whether transport via libNEGF should be included." FALSE)
option(WITH_TBLITE "Whether xTB support should be included via tblite." FALSE)
option(WITH_SDFTD3 "Whether the s-dftd3 library should be included" FALSE)
option(WITH_PYTHON "Whether the Python components of DFTB+ should be tested and installed" FALSE)
----------
----------(after)
option(WITH_OMP "Whether OpenMP thread parallisation should be enabled" TRUE)
option(WITH_MPI "Whether DFTB+ should support MPI-parallelism" TRUE)
option(WITH_TRANSPORT "Whether transport via libNEGF should be included." TRUE)
option(WITH_TBLITE "Whether xTB support should be included via tblite." TRUE)
option(WITH_SDFTD3 "Whether the s-dftd3 library should be included" TRUE)
option(WITH_PYTHON "Whether the Python components of DFTB+ should be tested and installed" TRUE)
----------
7. mkdir _build
8. FC=mpif90 CC=gcc cmake -DLAPACK_LIBRARY="/usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblas.a" -DBLAS_LIBRARY="/usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.a" -DSCALAPACK_LIBRARY=scalapack-openmpi -DCMAKE_INSTALL_PREFIX=/mnt/d/dftbplus-23.1/dftb+ -Wno-dev -B _build ./
9. cmake --build _build -- -j
10. cmake -B _build -DTEST_MPI_PROCS=2 -DTEST_OMP_THREADS=2 ./
11. pushd _build; ctest; popd
12. cmake --install _build

Environment settings
1. echo 'export PATH=$PATH:/mnt/d/dftbplus-23.1/dftb+/bin' >> ~/.bashrc
2. echo 'export PATH=$PATH:/mnt/d/dftbplus-23.1/dftb+/lib' >> ~/.bashrc
3. echo 'export PATH=$PATH:/mnt/d/dftbplus-23.1/dftb+/include' >> ~/.bashrc
4. echo 'export PATH=$PATH:/mnt/d/dftbplus-23.1/tools/misc' >> ~/.bashrc
5. bash
------------------------------------------------------------------------------
Installation (Ubuntu 22.04.1 LTS on windows11 (WSL2))

Quantum Espresso (version 7.2)
1. sudo apt update
2. sudo apt -y install gfortran gcc build-essential libopenmpi-dev
3. sudo apt -y install libblas-dev liblapack-dev libopenblas-dev libfftw3-dev libxc-dev
4. sudo apt -y install gnuplot xcrysden grace
5. wget https://www.quantum-espresso.org/XYZ/qe-7.2-ReleasePack.tar.gz
6. tar zxvf qe-7.2*
7. cd qe-7.2
8. ./configure
#------------------------------------------------
The following libraries have been found:
  BLAS_LIBS= -lopenblas
  LAPACK_LIBS=-L/usr/local/cuda/lib64  -lopenblas
  FFT_LIBS= -lfftw3
#------------------------------------------------
9. make pw

Environment settings
1. echo 'export PATH=$PATH:/mnt/d/qe-7.2/lib' >> ~/.bashrc
2. echo 'export PATH=$PATH:/mnt/d/qe-7.2/include' >> ~/.bashrc
3. bash
------------------------------------------------------------------------------