------------------------------------------------------------------------------
Usage

1. Set "r0" and "sigma" from "parameters_Ref1.txt". If the calculation does not converge, set "simga" to a value close to it.
  (atomic number >= Ag:  Relativistics = Zora) 
  ShellResolved = No
  DensityCompression = PowerCompression{ Power = 6; Radius = 14.0 }
  or
  ShellResolved = No
  DensityCompression = PowerCompression{ Power = 8; Radius = 12.0 }
2. Search for "r0" and "simga" in density. It's a good idea to do the calculations by hand a few times first to clarify the bare minimum and minimum fit range.
  python3 seq_denr0_v1.py
  Click "plot_map.gpl" to output the graph.
------------------------------------------------------------------------------
- If you compare the QE and band diagram and find that the area near the Fermi level is well-fitted, 
  and you want to fit a wider range, search as follows.

- However, it becomes difficult to search for transferability to other structures and the search range for fit becomes wider. 
  You can search with GA etc., but please visually check whether the fit is achieved in the points pointed out above.

3. Find stable basis function parameters with a good fit using the following steps.
  python3 seq_sto_v1.py
  Click "plot_map.gpl" to output the graph.
4. Search for "r0" and "sigma" of each orbit. 
  python3 seq_r0_v1.py
  Click "plot_map.gpl" to output the graph.
------------------------------------------------------------------------------
Note 1: As the saying goes, don't rush, it's a good idea to draw diagrams that are easy to understand and also check visually.
Note 2: It is better to do a rough review using a map and visually, and then manually search for a place to search in earnest using GA, etc., which will deepen your understanding and reduce the chance of making mistakes.
------------------------------------------------------------------------------

------------------------------------------------------------------------------
Note 3: After finding a good value to some extent, set the search range based on it and check it with Bayesian inference.
0. pip3 install bayesian-optimization==1.4.3
1. rewrite skdef.hsd.tmp_baysian and prepare band_check folder (e.g., see Mg folder)
2. rewrite initial parameters and boundaries in baysian_v1.py
3. python3 baysian_v1.py
4. sort -k 2 Evalute.txt >> Evalute_sort.txt
------------------------------------------------------------------------------

------------------------------------------------------------------------------
Note 4: When you want to check the results of Bayesian optimization using PSO.
0. pip3 install pyswarms==1.3.0
1. rewrite skdef.hsd.tmp_pso and prepare band_check folder (e.g., see Mg folder)
2. rewrite initial parameters and boundaries in this file
3. python3 pso_v1.py
4. sort -k 2 Evalute.txt >> Evalute_sort.txt
------------------------------------------------------------------------------

------------------------------------------------------------------------------
Note 5: When you want to check the results of Bayesian optimization using PSO.
0. pip3 install -U deap==1.4.1 --user
1. rewrite skdef.hsd.tmp_ea and prepare band_check folder (e.g., see Mn folder)
2. rewrite initial parameters and boundaries in ea_v1.py
3. python3 ea_v1.py
4. sort -k 2 Evalute.txt >> Evalute_sort.txt
------------------------------------------------------------------------------

Memo: remote (direct LAN connect)
------------------------------------------------------------------------------
# Settings
sudo ufw allow 22
sudo apt -y install openssh-server
systemctl start sshd
ps -ef | grep sshd
ssh xxxx@192.168.2.XXX
----------------
Wired
IPv4, Manual
192.168.2.XXX
255.255.255.0
192.168.2.1
DNS: 192.168.2.1
----------------

# Usage
ssh xxxx@192.168.2.XXX
cd ~/skprogs-v.0.2.1/examples/search
gnuplot < plot_map.gpl
scp map.gpl user@192.168.2.XXX

#from server to remote
scp user@192.168.2.XXX:/home/user/skprogs-v.0.2.1/examples/search/map.png ./Desktop
------------------------------------------------------------------------------